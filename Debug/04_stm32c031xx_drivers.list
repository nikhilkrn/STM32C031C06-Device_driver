
04_stm32c031xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000078c  080000b4  080000b4  000010b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000840  08000848  00001848  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000840  08000840  00001848  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000840  08000840  00001848  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000840  08000848  00001848  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000840  08000840  00001840  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000844  08000844  00001844  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001848  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000848  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000848  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00001848  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009e6  00000000  00000000  00001870  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000283  00000000  00000000  00002256  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  000024e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000092  00000000  00000000  000025a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002069  00000000  00000000  00002632  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001243  00000000  00000000  0000469b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008785  00000000  00000000  000058de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000e063  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000208  00000000  00000000  0000e0a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000077  00000000  00000000  0000e2b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b4 <__do_global_dtors_aux>:
 80000b4:	b510      	push	{r4, lr}
 80000b6:	4c06      	ldr	r4, [pc, #24]	@ (80000d0 <__do_global_dtors_aux+0x1c>)
 80000b8:	7823      	ldrb	r3, [r4, #0]
 80000ba:	2b00      	cmp	r3, #0
 80000bc:	d107      	bne.n	80000ce <__do_global_dtors_aux+0x1a>
 80000be:	4b05      	ldr	r3, [pc, #20]	@ (80000d4 <__do_global_dtors_aux+0x20>)
 80000c0:	2b00      	cmp	r3, #0
 80000c2:	d002      	beq.n	80000ca <__do_global_dtors_aux+0x16>
 80000c4:	4804      	ldr	r0, [pc, #16]	@ (80000d8 <__do_global_dtors_aux+0x24>)
 80000c6:	e000      	b.n	80000ca <__do_global_dtors_aux+0x16>
 80000c8:	bf00      	nop
 80000ca:	2301      	movs	r3, #1
 80000cc:	7023      	strb	r3, [r4, #0]
 80000ce:	bd10      	pop	{r4, pc}
 80000d0:	20000000 	.word	0x20000000
 80000d4:	00000000 	.word	0x00000000
 80000d8:	08000828 	.word	0x08000828

080000dc <frame_dummy>:
 80000dc:	4b04      	ldr	r3, [pc, #16]	@ (80000f0 <frame_dummy+0x14>)
 80000de:	b510      	push	{r4, lr}
 80000e0:	2b00      	cmp	r3, #0
 80000e2:	d003      	beq.n	80000ec <frame_dummy+0x10>
 80000e4:	4903      	ldr	r1, [pc, #12]	@ (80000f4 <frame_dummy+0x18>)
 80000e6:	4804      	ldr	r0, [pc, #16]	@ (80000f8 <frame_dummy+0x1c>)
 80000e8:	e000      	b.n	80000ec <frame_dummy+0x10>
 80000ea:	bf00      	nop
 80000ec:	bd10      	pop	{r4, pc}
 80000ee:	46c0      	nop			@ (mov r8, r8)
 80000f0:	00000000 	.word	0x00000000
 80000f4:	20000004 	.word	0x20000004
 80000f8:	08000828 	.word	0x08000828

080000fc <main>:

#define ENABLE 1

void EXTI2_3_IRQHandler(void);

int main(){
 80000fc:	b590      	push	{r4, r7, lr}
 80000fe:	b087      	sub	sp, #28
 8000100:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioBtn, GpioLed;

	//making all the fields of structure to 0 so that it won't take some garbage value.
	memset(&GpioBtn,0,sizeof(GpioBtn));
 8000102:	240c      	movs	r4, #12
 8000104:	193b      	adds	r3, r7, r4
 8000106:	220c      	movs	r2, #12
 8000108:	2100      	movs	r1, #0
 800010a:	0018      	movs	r0, r3
 800010c:	f000 fb60 	bl	80007d0 <memset>
	memset(&GpioLed,0,sizeof(GpioLed));
 8000110:	003b      	movs	r3, r7
 8000112:	220c      	movs	r2, #12
 8000114:	2100      	movs	r1, #0
 8000116:	0018      	movs	r0, r3
 8000118:	f000 fb5a 	bl	80007d0 <memset>

	GpioLed.pGpiox = GPIOB;
 800011c:	003b      	movs	r3, r7
 800011e:	4a1d      	ldr	r2, [pc, #116]	@ (8000194 <main+0x98>)
 8000120:	601a      	str	r2, [r3, #0]
	GpioLed.Gpio_PinConfig.GPIO_PinMode = GPIO_MODE_OT;
 8000122:	003b      	movs	r3, r7
 8000124:	2201      	movs	r2, #1
 8000126:	715a      	strb	r2, [r3, #5]
	GpioLed.Gpio_PinConfig.GPIO_PinNumber = GPIO_PIN_NUMBER_12;
 8000128:	003b      	movs	r3, r7
 800012a:	220c      	movs	r2, #12
 800012c:	711a      	strb	r2, [r3, #4]
	GpioLed.Gpio_PinConfig.GPIO_PinOpType = GPIO_OP_TYPE_PP;
 800012e:	003b      	movs	r3, r7
 8000130:	2200      	movs	r2, #0
 8000132:	719a      	strb	r2, [r3, #6]
	GpioLed.Gpio_PinConfig.GPIO_PinPuPd = GPIO_PP_PU;
 8000134:	003b      	movs	r3, r7
 8000136:	2201      	movs	r2, #1
 8000138:	721a      	strb	r2, [r3, #8]

	GPIO_PeriClkCtrl(GPIOB, ENABLE);
 800013a:	4b16      	ldr	r3, [pc, #88]	@ (8000194 <main+0x98>)
 800013c:	2101      	movs	r1, #1
 800013e:	0018      	movs	r0, r3
 8000140:	f000 f864 	bl	800020c <GPIO_PeriClkCtrl>
	GPIO_Init(&GpioLed);
 8000144:	003b      	movs	r3, r7
 8000146:	0018      	movs	r0, r3
 8000148:	f000 f8e8 	bl	800031c <GPIO_Init>


	GpioBtn.pGpiox = GPIOA;
 800014c:	193b      	adds	r3, r7, r4
 800014e:	22a0      	movs	r2, #160	@ 0xa0
 8000150:	05d2      	lsls	r2, r2, #23
 8000152:	601a      	str	r2, [r3, #0]
	GpioBtn.Gpio_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000154:	193b      	adds	r3, r7, r4
 8000156:	2204      	movs	r2, #4
 8000158:	715a      	strb	r2, [r3, #5]
	GpioBtn.Gpio_PinConfig.GPIO_PinNumber = GPIO_PIN_NUMBER_2;
 800015a:	193b      	adds	r3, r7, r4
 800015c:	2202      	movs	r2, #2
 800015e:	711a      	strb	r2, [r3, #4]
	GpioBtn.Gpio_PinConfig.GPIO_PinPuPd = GPIO_PP_PU;
 8000160:	193b      	adds	r3, r7, r4
 8000162:	2201      	movs	r2, #1
 8000164:	721a      	strb	r2, [r3, #8]

	GPIO_PeriClkCtrl(GPIOA, ENABLE);
 8000166:	23a0      	movs	r3, #160	@ 0xa0
 8000168:	05db      	lsls	r3, r3, #23
 800016a:	2101      	movs	r1, #1
 800016c:	0018      	movs	r0, r3
 800016e:	f000 f84d 	bl	800020c <GPIO_PeriClkCtrl>
	GPIO_Init(&GpioBtn);
 8000172:	193b      	adds	r3, r7, r4
 8000174:	0018      	movs	r0, r3
 8000176:	f000 f8d1 	bl	800031c <GPIO_Init>

	GPIO_IRQPriorityHandling(IRQ_NO_EXTI2_3, NVIC_IRQ_PRI1);
 800017a:	2101      	movs	r1, #1
 800017c:	2006      	movs	r0, #6
 800017e:	f000 fabd 	bl	80006fc <GPIO_IRQPriorityHandling>
	GPIO_IRQConfig(IRQ_NO_EXTI2_3, ENABLE);
 8000182:	2101      	movs	r1, #1
 8000184:	2006      	movs	r0, #6
 8000186:	f000 fa8d 	bl	80006a4 <GPIO_IRQConfig>
 800018a:	2300      	movs	r3, #0


}
 800018c:	0018      	movs	r0, r3
 800018e:	46bd      	mov	sp, r7
 8000190:	b007      	add	sp, #28
 8000192:	bd90      	pop	{r4, r7, pc}
 8000194:	50000400 	.word	0x50000400

08000198 <EXTI2_3_IRQHandler>:

void EXTI2_3_IRQHandler(void){
 8000198:	b580      	push	{r7, lr}
 800019a:	af00      	add	r7, sp, #0
	// need to prevent debouncing apply delay here
	GPIO_IRQHandling(GPIO_PIN_NUMBER_2);
 800019c:	2002      	movs	r0, #2
 800019e:	f000 fae7 	bl	8000770 <GPIO_IRQHandling>
	GPIO_ToggleOpPin(GPIOB, GPIO_PIN_NUMBER_12);
 80001a2:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <EXTI2_3_IRQHandler+0x1c>)
 80001a4:	210c      	movs	r1, #12
 80001a6:	0018      	movs	r0, r3
 80001a8:	f000 fa66 	bl	8000678 <GPIO_ToggleOpPin>
}
 80001ac:	46c0      	nop			@ (mov r8, r8)
 80001ae:	46bd      	mov	sp, r7
 80001b0:	bd80      	pop	{r7, pc}
 80001b2:	46c0      	nop			@ (mov r8, r8)
 80001b4:	50000400 	.word	0x50000400

080001b8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001b8:	480d      	ldr	r0, [pc, #52]	@ (80001f0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001ba:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001bc:	e000      	b.n	80001c0 <Reset_Handler+0x8>
 80001be:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001c0:	480c      	ldr	r0, [pc, #48]	@ (80001f4 <LoopForever+0x6>)
  ldr r1, =_edata
 80001c2:	490d      	ldr	r1, [pc, #52]	@ (80001f8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001c4:	4a0d      	ldr	r2, [pc, #52]	@ (80001fc <LoopForever+0xe>)
  movs r3, #0
 80001c6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001c8:	e002      	b.n	80001d0 <LoopCopyDataInit>

080001ca <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001ca:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001cc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001ce:	3304      	adds	r3, #4

080001d0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001d0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001d2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001d4:	d3f9      	bcc.n	80001ca <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001d6:	4a0a      	ldr	r2, [pc, #40]	@ (8000200 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001d8:	4c0a      	ldr	r4, [pc, #40]	@ (8000204 <LoopForever+0x16>)
  movs r3, #0
 80001da:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001dc:	e001      	b.n	80001e2 <LoopFillZerobss>

080001de <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001de:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001e0:	3204      	adds	r2, #4

080001e2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001e2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001e4:	d3fb      	bcc.n	80001de <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80001e6:	f000 fafb 	bl	80007e0 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 80001ea:	f7ff ff87 	bl	80000fc <main>

080001ee <LoopForever>:

LoopForever:
  b LoopForever
 80001ee:	e7fe      	b.n	80001ee <LoopForever>
  ldr   r0, =_estack
 80001f0:	20003000 	.word	0x20003000
  ldr r0, =_sdata
 80001f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001f8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001fc:	08000848 	.word	0x08000848
  ldr r2, =_sbss
 8000200:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000204:	2000001c 	.word	0x2000001c

08000208 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000208:	e7fe      	b.n	8000208 <ADC_IRQHandler>
	...

0800020c <GPIO_PeriClkCtrl>:
 * @return            -  none
 *
 * @Note              -  none

 */
void GPIO_PeriClkCtrl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi){
 800020c:	b580      	push	{r7, lr}
 800020e:	b082      	sub	sp, #8
 8000210:	af00      	add	r7, sp, #0
 8000212:	6078      	str	r0, [r7, #4]
 8000214:	000a      	movs	r2, r1
 8000216:	1cfb      	adds	r3, r7, #3
 8000218:	701a      	strb	r2, [r3, #0]

	if(EnOrDi == ENABLE){
 800021a:	1cfb      	adds	r3, r7, #3
 800021c:	781b      	ldrb	r3, [r3, #0]
 800021e:	2b01      	cmp	r3, #1
 8000220:	d137      	bne.n	8000292 <GPIO_PeriClkCtrl+0x86>
			if(pGPIOx == GPIOA){
 8000222:	687a      	ldr	r2, [r7, #4]
 8000224:	23a0      	movs	r3, #160	@ 0xa0
 8000226:	05db      	lsls	r3, r3, #23
 8000228:	429a      	cmp	r2, r3
 800022a:	d106      	bne.n	800023a <GPIO_PeriClkCtrl+0x2e>
				GPIOA_PCLK_EN();
 800022c:	4b36      	ldr	r3, [pc, #216]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 800022e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000230:	4b35      	ldr	r3, [pc, #212]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 8000232:	2101      	movs	r1, #1
 8000234:	430a      	orrs	r2, r1
 8000236:	635a      	str	r2, [r3, #52]	@ 0x34
			}
			else if(pGPIOx == GPIOF){
				GPIOF_PCLK_DI();
			}
		}
}
 8000238:	e062      	b.n	8000300 <GPIO_PeriClkCtrl+0xf4>
			else if(pGPIOx == GPIOB){
 800023a:	687b      	ldr	r3, [r7, #4]
 800023c:	4a33      	ldr	r2, [pc, #204]	@ (800030c <GPIO_PeriClkCtrl+0x100>)
 800023e:	4293      	cmp	r3, r2
 8000240:	d106      	bne.n	8000250 <GPIO_PeriClkCtrl+0x44>
				GPIOB_PCLK_EN();
 8000242:	4b31      	ldr	r3, [pc, #196]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 8000244:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000246:	4b30      	ldr	r3, [pc, #192]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 8000248:	2102      	movs	r1, #2
 800024a:	430a      	orrs	r2, r1
 800024c:	635a      	str	r2, [r3, #52]	@ 0x34
}
 800024e:	e057      	b.n	8000300 <GPIO_PeriClkCtrl+0xf4>
			else if(pGPIOx == GPIOC){
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	4a2f      	ldr	r2, [pc, #188]	@ (8000310 <GPIO_PeriClkCtrl+0x104>)
 8000254:	4293      	cmp	r3, r2
 8000256:	d106      	bne.n	8000266 <GPIO_PeriClkCtrl+0x5a>
				GPIOC_PCLK_EN();
 8000258:	4b2b      	ldr	r3, [pc, #172]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 800025a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800025c:	4b2a      	ldr	r3, [pc, #168]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 800025e:	2104      	movs	r1, #4
 8000260:	430a      	orrs	r2, r1
 8000262:	635a      	str	r2, [r3, #52]	@ 0x34
}
 8000264:	e04c      	b.n	8000300 <GPIO_PeriClkCtrl+0xf4>
			else if(pGPIOx == GPIOD){
 8000266:	687b      	ldr	r3, [r7, #4]
 8000268:	4a2a      	ldr	r2, [pc, #168]	@ (8000314 <GPIO_PeriClkCtrl+0x108>)
 800026a:	4293      	cmp	r3, r2
 800026c:	d106      	bne.n	800027c <GPIO_PeriClkCtrl+0x70>
				GPIOD_PCLK_EN();
 800026e:	4b26      	ldr	r3, [pc, #152]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 8000270:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000272:	4b25      	ldr	r3, [pc, #148]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 8000274:	2108      	movs	r1, #8
 8000276:	430a      	orrs	r2, r1
 8000278:	635a      	str	r2, [r3, #52]	@ 0x34
}
 800027a:	e041      	b.n	8000300 <GPIO_PeriClkCtrl+0xf4>
			else if(pGPIOx == GPIOF){
 800027c:	687b      	ldr	r3, [r7, #4]
 800027e:	4a26      	ldr	r2, [pc, #152]	@ (8000318 <GPIO_PeriClkCtrl+0x10c>)
 8000280:	4293      	cmp	r3, r2
 8000282:	d13d      	bne.n	8000300 <GPIO_PeriClkCtrl+0xf4>
				GPIOF_PCLK_EN();
 8000284:	4b20      	ldr	r3, [pc, #128]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 8000286:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000288:	4b1f      	ldr	r3, [pc, #124]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 800028a:	2120      	movs	r1, #32
 800028c:	430a      	orrs	r2, r1
 800028e:	635a      	str	r2, [r3, #52]	@ 0x34
}
 8000290:	e036      	b.n	8000300 <GPIO_PeriClkCtrl+0xf4>
			if(pGPIOx == GPIOA){
 8000292:	687a      	ldr	r2, [r7, #4]
 8000294:	23a0      	movs	r3, #160	@ 0xa0
 8000296:	05db      	lsls	r3, r3, #23
 8000298:	429a      	cmp	r2, r3
 800029a:	d106      	bne.n	80002aa <GPIO_PeriClkCtrl+0x9e>
				GPIOA_PCLK_DI();
 800029c:	4b1a      	ldr	r3, [pc, #104]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 800029e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80002a0:	4b19      	ldr	r3, [pc, #100]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 80002a2:	2101      	movs	r1, #1
 80002a4:	438a      	bics	r2, r1
 80002a6:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80002a8:	e02a      	b.n	8000300 <GPIO_PeriClkCtrl+0xf4>
			else if (pGPIOx == GPIOB) {
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a17      	ldr	r2, [pc, #92]	@ (800030c <GPIO_PeriClkCtrl+0x100>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d106      	bne.n	80002c0 <GPIO_PeriClkCtrl+0xb4>
				GPIOB_PCLK_DI();
 80002b2:	4b15      	ldr	r3, [pc, #84]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 80002b4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80002b6:	4b14      	ldr	r3, [pc, #80]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 80002b8:	2102      	movs	r1, #2
 80002ba:	438a      	bics	r2, r1
 80002bc:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80002be:	e01f      	b.n	8000300 <GPIO_PeriClkCtrl+0xf4>
			else if(pGPIOx == GPIOC){
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a13      	ldr	r2, [pc, #76]	@ (8000310 <GPIO_PeriClkCtrl+0x104>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PeriClkCtrl+0xca>
				GPIOC_PCLK_DI();
 80002c8:	4b0f      	ldr	r3, [pc, #60]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 80002ca:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80002cc:	4b0e      	ldr	r3, [pc, #56]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 80002ce:	2104      	movs	r1, #4
 80002d0:	438a      	bics	r2, r1
 80002d2:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80002d4:	e014      	b.n	8000300 <GPIO_PeriClkCtrl+0xf4>
			else if(pGPIOx == GPIOD){
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a0e      	ldr	r2, [pc, #56]	@ (8000314 <GPIO_PeriClkCtrl+0x108>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriClkCtrl+0xe0>
				GPIOD_PCLK_DI();
 80002de:	4b0a      	ldr	r3, [pc, #40]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 80002e0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80002e2:	4b09      	ldr	r3, [pc, #36]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 80002e4:	2108      	movs	r1, #8
 80002e6:	438a      	bics	r2, r1
 80002e8:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80002ea:	e009      	b.n	8000300 <GPIO_PeriClkCtrl+0xf4>
			else if(pGPIOx == GPIOF){
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a0a      	ldr	r2, [pc, #40]	@ (8000318 <GPIO_PeriClkCtrl+0x10c>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d105      	bne.n	8000300 <GPIO_PeriClkCtrl+0xf4>
				GPIOF_PCLK_DI();
 80002f4:	4b04      	ldr	r3, [pc, #16]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 80002f6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80002f8:	4b03      	ldr	r3, [pc, #12]	@ (8000308 <GPIO_PeriClkCtrl+0xfc>)
 80002fa:	2120      	movs	r1, #32
 80002fc:	438a      	bics	r2, r1
 80002fe:	635a      	str	r2, [r3, #52]	@ 0x34
}
 8000300:	46c0      	nop			@ (mov r8, r8)
 8000302:	46bd      	mov	sp, r7
 8000304:	b002      	add	sp, #8
 8000306:	bd80      	pop	{r7, pc}
 8000308:	40021000 	.word	0x40021000
 800030c:	50000400 	.word	0x50000400
 8000310:	50000800 	.word	0x50000800
 8000314:	50000c00 	.word	0x50000c00
 8000318:	50001400 	.word	0x50001400

0800031c <GPIO_Init>:
 *
 * @Note              -  none

 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 800031c:	b590      	push	{r4, r7, lr}
 800031e:	b087      	sub	sp, #28
 8000320:	af00      	add	r7, sp, #0
 8000322:	6078      	str	r0, [r7, #4]
	uint32_t temp;
	// 1. Configure Pin Mode
	if(pGPIOHandle->Gpio_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	795b      	ldrb	r3, [r3, #5]
 8000328:	2b03      	cmp	r3, #3
 800032a:	d820      	bhi.n	800036e <GPIO_Init+0x52>
		// 1.1 Configure the non-interrupt pin mode
		temp = pGPIOHandle->Gpio_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);  // 2 is * coz there is 2 bit for pin mode reg for each pins
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	795b      	ldrb	r3, [r3, #5]
 8000330:	001a      	movs	r2, r3
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	791b      	ldrb	r3, [r3, #4]
 8000336:	005b      	lsls	r3, r3, #1
 8000338:	409a      	lsls	r2, r3
 800033a:	0013      	movs	r3, r2
 800033c:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGpiox->MODER &= ~(0x03 << 2 * pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	681a      	ldr	r2, [r3, #0]
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	791b      	ldrb	r3, [r3, #4]
 8000348:	005b      	lsls	r3, r3, #1
 800034a:	2103      	movs	r1, #3
 800034c:	4099      	lsls	r1, r3
 800034e:	000b      	movs	r3, r1
 8000350:	43db      	mvns	r3, r3
 8000352:	0019      	movs	r1, r3
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	400a      	ands	r2, r1
 800035a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGpiox->MODER |= temp;
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	6819      	ldr	r1, [r3, #0]
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	693a      	ldr	r2, [r7, #16]
 8000368:	430a      	orrs	r2, r1
 800036a:	601a      	str	r2, [r3, #0]
 800036c:	e0bd      	b.n	80004ea <GPIO_Init+0x1ce>

	}else{
		// 1.2 Configure the interrupt pin mode
		if(pGPIOHandle->Gpio_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	795b      	ldrb	r3, [r3, #5]
 8000372:	2b04      	cmp	r3, #4
 8000374:	d117      	bne.n	80003a6 <GPIO_Init+0x8a>

			//1.2.1 configure Falling Trigger reg (FTSR).
			EXTI->FTSR |= (0x01 << pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 8000376:	4bbb      	ldr	r3, [pc, #748]	@ (8000664 <GPIO_Init+0x348>)
 8000378:	685a      	ldr	r2, [r3, #4]
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	791b      	ldrb	r3, [r3, #4]
 800037e:	0019      	movs	r1, r3
 8000380:	2301      	movs	r3, #1
 8000382:	408b      	lsls	r3, r1
 8000384:	0019      	movs	r1, r3
 8000386:	4bb7      	ldr	r3, [pc, #732]	@ (8000664 <GPIO_Init+0x348>)
 8000388:	430a      	orrs	r2, r1
 800038a:	605a      	str	r2, [r3, #4]

			// clear the corresponding RTSR bit
			EXTI->RTSR &= ~(0x01 << pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 800038c:	4bb5      	ldr	r3, [pc, #724]	@ (8000664 <GPIO_Init+0x348>)
 800038e:	681a      	ldr	r2, [r3, #0]
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	791b      	ldrb	r3, [r3, #4]
 8000394:	0019      	movs	r1, r3
 8000396:	2301      	movs	r3, #1
 8000398:	408b      	lsls	r3, r1
 800039a:	43db      	mvns	r3, r3
 800039c:	0019      	movs	r1, r3
 800039e:	4bb1      	ldr	r3, [pc, #708]	@ (8000664 <GPIO_Init+0x348>)
 80003a0:	400a      	ands	r2, r1
 80003a2:	601a      	str	r2, [r3, #0]
 80003a4:	e035      	b.n	8000412 <GPIO_Init+0xf6>

		}
		else if(pGPIOHandle->Gpio_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	795b      	ldrb	r3, [r3, #5]
 80003aa:	2b05      	cmp	r3, #5
 80003ac:	d117      	bne.n	80003de <GPIO_Init+0xc2>

			//1.2.2 configure the RTSR.
			EXTI->RTSR |= (0x01 << pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 80003ae:	4bad      	ldr	r3, [pc, #692]	@ (8000664 <GPIO_Init+0x348>)
 80003b0:	681a      	ldr	r2, [r3, #0]
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	791b      	ldrb	r3, [r3, #4]
 80003b6:	0019      	movs	r1, r3
 80003b8:	2301      	movs	r3, #1
 80003ba:	408b      	lsls	r3, r1
 80003bc:	0019      	movs	r1, r3
 80003be:	4ba9      	ldr	r3, [pc, #676]	@ (8000664 <GPIO_Init+0x348>)
 80003c0:	430a      	orrs	r2, r1
 80003c2:	601a      	str	r2, [r3, #0]

			// clear the corresponding FTSR bit
			EXTI->FTSR &= ~(0x01 << pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 80003c4:	4ba7      	ldr	r3, [pc, #668]	@ (8000664 <GPIO_Init+0x348>)
 80003c6:	685a      	ldr	r2, [r3, #4]
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	791b      	ldrb	r3, [r3, #4]
 80003cc:	0019      	movs	r1, r3
 80003ce:	2301      	movs	r3, #1
 80003d0:	408b      	lsls	r3, r1
 80003d2:	43db      	mvns	r3, r3
 80003d4:	0019      	movs	r1, r3
 80003d6:	4ba3      	ldr	r3, [pc, #652]	@ (8000664 <GPIO_Init+0x348>)
 80003d8:	400a      	ands	r2, r1
 80003da:	605a      	str	r2, [r3, #4]
 80003dc:	e019      	b.n	8000412 <GPIO_Init+0xf6>

		}
		else if(pGPIOHandle->Gpio_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FRT){
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	795b      	ldrb	r3, [r3, #5]
 80003e2:	2b06      	cmp	r3, #6
 80003e4:	d115      	bne.n	8000412 <GPIO_Init+0xf6>

			// 1.2.3 Configure both FTSR and RTSR
			EXTI->RTSR |= (0x01 << pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 80003e6:	4b9f      	ldr	r3, [pc, #636]	@ (8000664 <GPIO_Init+0x348>)
 80003e8:	681a      	ldr	r2, [r3, #0]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	791b      	ldrb	r3, [r3, #4]
 80003ee:	0019      	movs	r1, r3
 80003f0:	2301      	movs	r3, #1
 80003f2:	408b      	lsls	r3, r1
 80003f4:	0019      	movs	r1, r3
 80003f6:	4b9b      	ldr	r3, [pc, #620]	@ (8000664 <GPIO_Init+0x348>)
 80003f8:	430a      	orrs	r2, r1
 80003fa:	601a      	str	r2, [r3, #0]
			EXTI->FTSR |= (0x01 << pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 80003fc:	4b99      	ldr	r3, [pc, #612]	@ (8000664 <GPIO_Init+0x348>)
 80003fe:	685a      	ldr	r2, [r3, #4]
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	791b      	ldrb	r3, [r3, #4]
 8000404:	0019      	movs	r1, r3
 8000406:	2301      	movs	r3, #1
 8000408:	408b      	lsls	r3, r1
 800040a:	0019      	movs	r1, r3
 800040c:	4b95      	ldr	r3, [pc, #596]	@ (8000664 <GPIO_Init+0x348>)
 800040e:	430a      	orrs	r2, r1
 8000410:	605a      	str	r2, [r3, #4]

		}
		// 1.3. Configure the  GPIO Port selection in EXTI_EXTICR
		uint8_t reg_index = pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber / 4;
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	791a      	ldrb	r2, [r3, #4]
 8000416:	2417      	movs	r4, #23
 8000418:	193b      	adds	r3, r7, r4
 800041a:	0892      	lsrs	r2, r2, #2
 800041c:	701a      	strb	r2, [r3, #0]
		uint8_t bit_shift = (pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber % 4) * 8;
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	791b      	ldrb	r3, [r3, #4]
 8000422:	2203      	movs	r2, #3
 8000424:	4013      	ands	r3, r2
 8000426:	b2da      	uxtb	r2, r3
 8000428:	2116      	movs	r1, #22
 800042a:	187b      	adds	r3, r7, r1
 800042c:	00d2      	lsls	r2, r2, #3
 800042e:	701a      	strb	r2, [r3, #0]
		EXTI->EXTICR[reg_index] &= ~(0xFF << bit_shift);
 8000430:	4a8c      	ldr	r2, [pc, #560]	@ (8000664 <GPIO_Init+0x348>)
 8000432:	193b      	adds	r3, r7, r4
 8000434:	781b      	ldrb	r3, [r3, #0]
 8000436:	3316      	adds	r3, #22
 8000438:	009b      	lsls	r3, r3, #2
 800043a:	589a      	ldr	r2, [r3, r2]
 800043c:	187b      	adds	r3, r7, r1
 800043e:	781b      	ldrb	r3, [r3, #0]
 8000440:	21ff      	movs	r1, #255	@ 0xff
 8000442:	4099      	lsls	r1, r3
 8000444:	000b      	movs	r3, r1
 8000446:	43db      	mvns	r3, r3
 8000448:	0018      	movs	r0, r3
 800044a:	4986      	ldr	r1, [pc, #536]	@ (8000664 <GPIO_Init+0x348>)
 800044c:	193b      	adds	r3, r7, r4
 800044e:	781b      	ldrb	r3, [r3, #0]
 8000450:	4002      	ands	r2, r0
 8000452:	3316      	adds	r3, #22
 8000454:	009b      	lsls	r3, r3, #2
 8000456:	505a      	str	r2, [r3, r1]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGpiox);
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	681a      	ldr	r2, [r3, #0]
 800045c:	23a0      	movs	r3, #160	@ 0xa0
 800045e:	05db      	lsls	r3, r3, #23
 8000460:	429a      	cmp	r2, r3
 8000462:	d01d      	beq.n	80004a0 <GPIO_Init+0x184>
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	4a7f      	ldr	r2, [pc, #508]	@ (8000668 <GPIO_Init+0x34c>)
 800046a:	4293      	cmp	r3, r2
 800046c:	d016      	beq.n	800049c <GPIO_Init+0x180>
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	4a7e      	ldr	r2, [pc, #504]	@ (800066c <GPIO_Init+0x350>)
 8000474:	4293      	cmp	r3, r2
 8000476:	d00f      	beq.n	8000498 <GPIO_Init+0x17c>
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	4a7c      	ldr	r2, [pc, #496]	@ (8000670 <GPIO_Init+0x354>)
 800047e:	4293      	cmp	r3, r2
 8000480:	d008      	beq.n	8000494 <GPIO_Init+0x178>
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	4a7b      	ldr	r2, [pc, #492]	@ (8000674 <GPIO_Init+0x358>)
 8000488:	4293      	cmp	r3, r2
 800048a:	d101      	bne.n	8000490 <GPIO_Init+0x174>
 800048c:	2304      	movs	r3, #4
 800048e:	e008      	b.n	80004a2 <GPIO_Init+0x186>
 8000490:	2300      	movs	r3, #0
 8000492:	e006      	b.n	80004a2 <GPIO_Init+0x186>
 8000494:	2303      	movs	r3, #3
 8000496:	e004      	b.n	80004a2 <GPIO_Init+0x186>
 8000498:	2302      	movs	r3, #2
 800049a:	e002      	b.n	80004a2 <GPIO_Init+0x186>
 800049c:	2301      	movs	r3, #1
 800049e:	e000      	b.n	80004a2 <GPIO_Init+0x186>
 80004a0:	2300      	movs	r3, #0
 80004a2:	2115      	movs	r1, #21
 80004a4:	187a      	adds	r2, r7, r1
 80004a6:	7013      	strb	r3, [r2, #0]
		EXTI->EXTICR[reg_index] |= (portcode << bit_shift);
 80004a8:	4a6e      	ldr	r2, [pc, #440]	@ (8000664 <GPIO_Init+0x348>)
 80004aa:	2417      	movs	r4, #23
 80004ac:	193b      	adds	r3, r7, r4
 80004ae:	781b      	ldrb	r3, [r3, #0]
 80004b0:	3316      	adds	r3, #22
 80004b2:	009b      	lsls	r3, r3, #2
 80004b4:	589a      	ldr	r2, [r3, r2]
 80004b6:	187b      	adds	r3, r7, r1
 80004b8:	7819      	ldrb	r1, [r3, #0]
 80004ba:	2316      	movs	r3, #22
 80004bc:	18fb      	adds	r3, r7, r3
 80004be:	781b      	ldrb	r3, [r3, #0]
 80004c0:	4099      	lsls	r1, r3
 80004c2:	000b      	movs	r3, r1
 80004c4:	0018      	movs	r0, r3
 80004c6:	4967      	ldr	r1, [pc, #412]	@ (8000664 <GPIO_Init+0x348>)
 80004c8:	193b      	adds	r3, r7, r4
 80004ca:	781b      	ldrb	r3, [r3, #0]
 80004cc:	4302      	orrs	r2, r0
 80004ce:	3316      	adds	r3, #22
 80004d0:	009b      	lsls	r3, r3, #2
 80004d2:	505a      	str	r2, [r3, r1]

		// 1.4. Enable the EXTI Interrupt delivery using IMR
		EXTI->IMR |= (0x01 << pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 80004d4:	4b63      	ldr	r3, [pc, #396]	@ (8000664 <GPIO_Init+0x348>)
 80004d6:	6f9a      	ldr	r2, [r3, #120]	@ 0x78
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	791b      	ldrb	r3, [r3, #4]
 80004dc:	0019      	movs	r1, r3
 80004de:	2301      	movs	r3, #1
 80004e0:	408b      	lsls	r3, r1
 80004e2:	0019      	movs	r1, r3
 80004e4:	4b5f      	ldr	r3, [pc, #380]	@ (8000664 <GPIO_Init+0x348>)
 80004e6:	430a      	orrs	r2, r1
 80004e8:	679a      	str	r2, [r3, #120]	@ 0x78
	}

	temp = 0;
 80004ea:	2300      	movs	r3, #0
 80004ec:	613b      	str	r3, [r7, #16]

	// 2. Configure Speed
	temp = pGPIOHandle->Gpio_PinConfig.GPIO_PinOpSpeed << (2 * pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	79db      	ldrb	r3, [r3, #7]
 80004f2:	001a      	movs	r2, r3
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	791b      	ldrb	r3, [r3, #4]
 80004f8:	005b      	lsls	r3, r3, #1
 80004fa:	409a      	lsls	r2, r3
 80004fc:	0013      	movs	r3, r2
 80004fe:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGpiox->OSPEEDR &= ~(0x03 << 2 * pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	689a      	ldr	r2, [r3, #8]
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	791b      	ldrb	r3, [r3, #4]
 800050a:	005b      	lsls	r3, r3, #1
 800050c:	2103      	movs	r1, #3
 800050e:	4099      	lsls	r1, r3
 8000510:	000b      	movs	r3, r1
 8000512:	43db      	mvns	r3, r3
 8000514:	0019      	movs	r1, r3
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	400a      	ands	r2, r1
 800051c:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGpiox->OSPEEDR |= temp;
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	6899      	ldr	r1, [r3, #8]
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	693a      	ldr	r2, [r7, #16]
 800052a:	430a      	orrs	r2, r1
 800052c:	609a      	str	r2, [r3, #8]

	temp = 0;
 800052e:	2300      	movs	r3, #0
 8000530:	613b      	str	r3, [r7, #16]
	//3. Configure Pull up Pull Down Setting
	temp = pGPIOHandle->Gpio_PinConfig.GPIO_PinPuPd << (2 * pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	7a1b      	ldrb	r3, [r3, #8]
 8000536:	001a      	movs	r2, r3
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	791b      	ldrb	r3, [r3, #4]
 800053c:	005b      	lsls	r3, r3, #1
 800053e:	409a      	lsls	r2, r3
 8000540:	0013      	movs	r3, r2
 8000542:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGpiox->PUPDR &= ~(0x03 << 2 * pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	68da      	ldr	r2, [r3, #12]
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	791b      	ldrb	r3, [r3, #4]
 800054e:	005b      	lsls	r3, r3, #1
 8000550:	2103      	movs	r1, #3
 8000552:	4099      	lsls	r1, r3
 8000554:	000b      	movs	r3, r1
 8000556:	43db      	mvns	r3, r3
 8000558:	0019      	movs	r1, r3
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	400a      	ands	r2, r1
 8000560:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGpiox->PUPDR |= temp;
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	68d9      	ldr	r1, [r3, #12]
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	693a      	ldr	r2, [r7, #16]
 800056e:	430a      	orrs	r2, r1
 8000570:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000572:	2300      	movs	r3, #0
 8000574:	613b      	str	r3, [r7, #16]
	//4. Configure Output Type
	temp = pGPIOHandle->Gpio_PinConfig.GPIO_PinOpType << (pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	799b      	ldrb	r3, [r3, #6]
 800057a:	001a      	movs	r2, r3
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	791b      	ldrb	r3, [r3, #4]
 8000580:	409a      	lsls	r2, r3
 8000582:	0013      	movs	r3, r2
 8000584:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGpiox->OTYPER &= ~(0x01 << pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber);
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	681b      	ldr	r3, [r3, #0]
 800058a:	685a      	ldr	r2, [r3, #4]
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	791b      	ldrb	r3, [r3, #4]
 8000590:	0019      	movs	r1, r3
 8000592:	2301      	movs	r3, #1
 8000594:	408b      	lsls	r3, r1
 8000596:	43db      	mvns	r3, r3
 8000598:	0019      	movs	r1, r3
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	400a      	ands	r2, r1
 80005a0:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGpiox->OTYPER |= temp;
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	6859      	ldr	r1, [r3, #4]
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	693a      	ldr	r2, [r7, #16]
 80005ae:	430a      	orrs	r2, r1
 80005b0:	605a      	str	r2, [r3, #4]

	temp = 0;
 80005b2:	2300      	movs	r3, #0
 80005b4:	613b      	str	r3, [r7, #16]
	//5. Configure Alternate Function
	if(pGPIOHandle->Gpio_PinConfig.GPIO_PinAltrFunc == GPIO_MODE_ALTFN){
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	7a5b      	ldrb	r3, [r3, #9]
 80005ba:	2b02      	cmp	r3, #2
 80005bc:	d14d      	bne.n	800065a <GPIO_Init+0x33e>

		uint8_t temp1 = pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber % 8;
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	791a      	ldrb	r2, [r3, #4]
 80005c2:	200f      	movs	r0, #15
 80005c4:	183b      	adds	r3, r7, r0
 80005c6:	2107      	movs	r1, #7
 80005c8:	400a      	ands	r2, r1
 80005ca:	701a      	strb	r2, [r3, #0]

		if(pGPIOHandle->Gpio_PinConfig.GPIO_PinNumber <=7){
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	791b      	ldrb	r3, [r3, #4]
 80005d0:	2b07      	cmp	r3, #7
 80005d2:	d821      	bhi.n	8000618 <GPIO_Init+0x2fc>
			temp = pGPIOHandle->Gpio_PinConfig.GPIO_PinAltrFunc <<(4 * temp1);
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	7a5b      	ldrb	r3, [r3, #9]
 80005d8:	001a      	movs	r2, r3
 80005da:	0001      	movs	r1, r0
 80005dc:	187b      	adds	r3, r7, r1
 80005de:	781b      	ldrb	r3, [r3, #0]
 80005e0:	009b      	lsls	r3, r3, #2
 80005e2:	409a      	lsls	r2, r3
 80005e4:	0013      	movs	r3, r2
 80005e6:	613b      	str	r3, [r7, #16]
			pGPIOHandle->pGpiox->AFRL &= ~(0x0F << 4 * temp1);
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	6a1a      	ldr	r2, [r3, #32]
 80005ee:	187b      	adds	r3, r7, r1
 80005f0:	781b      	ldrb	r3, [r3, #0]
 80005f2:	009b      	lsls	r3, r3, #2
 80005f4:	210f      	movs	r1, #15
 80005f6:	4099      	lsls	r1, r3
 80005f8:	000b      	movs	r3, r1
 80005fa:	43db      	mvns	r3, r3
 80005fc:	0019      	movs	r1, r3
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	400a      	ands	r2, r1
 8000604:	621a      	str	r2, [r3, #32]
			pGPIOHandle->pGpiox->AFRL |= temp;
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	6a19      	ldr	r1, [r3, #32]
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	693a      	ldr	r2, [r7, #16]
 8000612:	430a      	orrs	r2, r1
 8000614:	621a      	str	r2, [r3, #32]
			temp = pGPIOHandle->Gpio_PinConfig.GPIO_PinAltrFunc <<(4 * temp1);
			pGPIOHandle->pGpiox->AFRH &= ~(0x0F << 4 * temp1);
			pGPIOHandle->pGpiox->AFRH |= temp;
		}
	}
}
 8000616:	e020      	b.n	800065a <GPIO_Init+0x33e>
			temp = pGPIOHandle->Gpio_PinConfig.GPIO_PinAltrFunc <<(4 * temp1);
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	7a5b      	ldrb	r3, [r3, #9]
 800061c:	001a      	movs	r2, r3
 800061e:	210f      	movs	r1, #15
 8000620:	187b      	adds	r3, r7, r1
 8000622:	781b      	ldrb	r3, [r3, #0]
 8000624:	009b      	lsls	r3, r3, #2
 8000626:	409a      	lsls	r2, r3
 8000628:	0013      	movs	r3, r2
 800062a:	613b      	str	r3, [r7, #16]
			pGPIOHandle->pGpiox->AFRH &= ~(0x0F << 4 * temp1);
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000632:	187b      	adds	r3, r7, r1
 8000634:	781b      	ldrb	r3, [r3, #0]
 8000636:	009b      	lsls	r3, r3, #2
 8000638:	210f      	movs	r1, #15
 800063a:	4099      	lsls	r1, r3
 800063c:	000b      	movs	r3, r1
 800063e:	43db      	mvns	r3, r3
 8000640:	0019      	movs	r1, r3
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	400a      	ands	r2, r1
 8000648:	625a      	str	r2, [r3, #36]	@ 0x24
			pGPIOHandle->pGpiox->AFRH |= temp;
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	693a      	ldr	r2, [r7, #16]
 8000656:	430a      	orrs	r2, r1
 8000658:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800065a:	46c0      	nop			@ (mov r8, r8)
 800065c:	46bd      	mov	sp, r7
 800065e:	b007      	add	sp, #28
 8000660:	bd90      	pop	{r4, r7, pc}
 8000662:	46c0      	nop			@ (mov r8, r8)
 8000664:	40021800 	.word	0x40021800
 8000668:	50000400 	.word	0x50000400
 800066c:	50000800 	.word	0x50000800
 8000670:	50000c00 	.word	0x50000c00
 8000674:	50001400 	.word	0x50001400

08000678 <GPIO_ToggleOpPin>:
 * @return            -  none
 *
 * @Note              -  none

 */
void GPIO_ToggleOpPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000678:	b580      	push	{r7, lr}
 800067a:	b082      	sub	sp, #8
 800067c:	af00      	add	r7, sp, #0
 800067e:	6078      	str	r0, [r7, #4]
 8000680:	000a      	movs	r2, r1
 8000682:	1cfb      	adds	r3, r7, #3
 8000684:	701a      	strb	r2, [r3, #0]
	pGPIOx->ODR ^= (0x01 << PinNumber);
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	695b      	ldr	r3, [r3, #20]
 800068a:	1cfa      	adds	r2, r7, #3
 800068c:	7812      	ldrb	r2, [r2, #0]
 800068e:	2101      	movs	r1, #1
 8000690:	4091      	lsls	r1, r2
 8000692:	000a      	movs	r2, r1
 8000694:	405a      	eors	r2, r3
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	615a      	str	r2, [r3, #20]
}
 800069a:	46c0      	nop			@ (mov r8, r8)
 800069c:	46bd      	mov	sp, r7
 800069e:	b002      	add	sp, #8
 80006a0:	bd80      	pop	{r7, pc}
	...

080006a4 <GPIO_IRQConfig>:
 * @return            -  none
 *
 * @Note              -  none

 */
void GPIO_IRQConfig(uint8_t IRQNumber,  uint8_t EnOrDi){
 80006a4:	b580      	push	{r7, lr}
 80006a6:	b082      	sub	sp, #8
 80006a8:	af00      	add	r7, sp, #0
 80006aa:	0002      	movs	r2, r0
 80006ac:	1dfb      	adds	r3, r7, #7
 80006ae:	701a      	strb	r2, [r3, #0]
 80006b0:	1dbb      	adds	r3, r7, #6
 80006b2:	1c0a      	adds	r2, r1, #0
 80006b4:	701a      	strb	r2, [r3, #0]

	if(EnOrDi == ENABLE){
 80006b6:	1dbb      	adds	r3, r7, #6
 80006b8:	781b      	ldrb	r3, [r3, #0]
 80006ba:	2b01      	cmp	r3, #1
 80006bc:	d10b      	bne.n	80006d6 <GPIO_IRQConfig+0x32>
		// program 	ISER reg , in M0+ there are only 31 interrupt are possible unlike M4 there are 81 IRQ no so there is IRQ0-2
		*NVIC_ISER |= (1 << IRQNumber);
 80006be:	4b0d      	ldr	r3, [pc, #52]	@ (80006f4 <GPIO_IRQConfig+0x50>)
 80006c0:	681a      	ldr	r2, [r3, #0]
 80006c2:	1dfb      	adds	r3, r7, #7
 80006c4:	781b      	ldrb	r3, [r3, #0]
 80006c6:	2101      	movs	r1, #1
 80006c8:	4099      	lsls	r1, r3
 80006ca:	000b      	movs	r3, r1
 80006cc:	0019      	movs	r1, r3
 80006ce:	4b09      	ldr	r3, [pc, #36]	@ (80006f4 <GPIO_IRQConfig+0x50>)
 80006d0:	430a      	orrs	r2, r1
 80006d2:	601a      	str	r2, [r3, #0]
	}else{
		*NVIC_ICER |= (1 << IRQNumber);
	}

}
 80006d4:	e00a      	b.n	80006ec <GPIO_IRQConfig+0x48>
		*NVIC_ICER |= (1 << IRQNumber);
 80006d6:	4b08      	ldr	r3, [pc, #32]	@ (80006f8 <GPIO_IRQConfig+0x54>)
 80006d8:	681a      	ldr	r2, [r3, #0]
 80006da:	1dfb      	adds	r3, r7, #7
 80006dc:	781b      	ldrb	r3, [r3, #0]
 80006de:	2101      	movs	r1, #1
 80006e0:	4099      	lsls	r1, r3
 80006e2:	000b      	movs	r3, r1
 80006e4:	0019      	movs	r1, r3
 80006e6:	4b04      	ldr	r3, [pc, #16]	@ (80006f8 <GPIO_IRQConfig+0x54>)
 80006e8:	430a      	orrs	r2, r1
 80006ea:	601a      	str	r2, [r3, #0]
}
 80006ec:	46c0      	nop			@ (mov r8, r8)
 80006ee:	46bd      	mov	sp, r7
 80006f0:	b002      	add	sp, #8
 80006f2:	bd80      	pop	{r7, pc}
 80006f4:	e000e100 	.word	0xe000e100
 80006f8:	e000e180 	.word	0xe000e180

080006fc <GPIO_IRQPriorityHandling>:
 * @return            -  none
 *
 * @Note              -  none

 */
void GPIO_IRQPriorityHandling(uint8_t IRQNumber,uint8_t IRQPriority){
 80006fc:	b590      	push	{r4, r7, lr}
 80006fe:	b085      	sub	sp, #20
 8000700:	af00      	add	r7, sp, #0
 8000702:	0002      	movs	r2, r0
 8000704:	1dfb      	adds	r3, r7, #7
 8000706:	701a      	strb	r2, [r3, #0]
 8000708:	1dbb      	adds	r3, r7, #6
 800070a:	1c0a      	adds	r2, r1, #0
 800070c:	701a      	strb	r2, [r3, #0]
	uint8_t iprx = IRQNumber /4 ;
 800070e:	200f      	movs	r0, #15
 8000710:	183b      	adds	r3, r7, r0
 8000712:	1dfa      	adds	r2, r7, #7
 8000714:	7812      	ldrb	r2, [r2, #0]
 8000716:	0892      	lsrs	r2, r2, #2
 8000718:	701a      	strb	r2, [r3, #0]
	uint8_t iprx_bit = IRQNumber % 4 ;
 800071a:	240e      	movs	r4, #14
 800071c:	193b      	adds	r3, r7, r4
 800071e:	1dfa      	adds	r2, r7, #7
 8000720:	7812      	ldrb	r2, [r2, #0]
 8000722:	2103      	movs	r1, #3
 8000724:	400a      	ands	r2, r1
 8000726:	701a      	strb	r2, [r3, #0]
	uint8_t shifted_bits_numbers = (8 * iprx_bit) + (8 - NO_PR_BITS_IMPLEMENTED);
 8000728:	193b      	adds	r3, r7, r4
 800072a:	781b      	ldrb	r3, [r3, #0]
 800072c:	00db      	lsls	r3, r3, #3
 800072e:	b2da      	uxtb	r2, r3
 8000730:	240d      	movs	r4, #13
 8000732:	193b      	adds	r3, r7, r4
 8000734:	3204      	adds	r2, #4
 8000736:	701a      	strb	r2, [r3, #0]
	*(NVIC_IPR + iprx) |= (IRQPriority << (shifted_bits_numbers));
 8000738:	183b      	adds	r3, r7, r0
 800073a:	781b      	ldrb	r3, [r3, #0]
 800073c:	009b      	lsls	r3, r3, #2
 800073e:	4a0b      	ldr	r2, [pc, #44]	@ (800076c <GPIO_IRQPriorityHandling+0x70>)
 8000740:	4694      	mov	ip, r2
 8000742:	4463      	add	r3, ip
 8000744:	681a      	ldr	r2, [r3, #0]
 8000746:	1dbb      	adds	r3, r7, #6
 8000748:	7819      	ldrb	r1, [r3, #0]
 800074a:	193b      	adds	r3, r7, r4
 800074c:	781b      	ldrb	r3, [r3, #0]
 800074e:	4099      	lsls	r1, r3
 8000750:	000b      	movs	r3, r1
 8000752:	0019      	movs	r1, r3
 8000754:	183b      	adds	r3, r7, r0
 8000756:	781b      	ldrb	r3, [r3, #0]
 8000758:	009b      	lsls	r3, r3, #2
 800075a:	4804      	ldr	r0, [pc, #16]	@ (800076c <GPIO_IRQPriorityHandling+0x70>)
 800075c:	4684      	mov	ip, r0
 800075e:	4463      	add	r3, ip
 8000760:	430a      	orrs	r2, r1
 8000762:	601a      	str	r2, [r3, #0]
}
 8000764:	46c0      	nop			@ (mov r8, r8)
 8000766:	46bd      	mov	sp, r7
 8000768:	b005      	add	sp, #20
 800076a:	bd90      	pop	{r4, r7, pc}
 800076c:	e000e400 	.word	0xe000e400

08000770 <GPIO_IRQHandling>:
 * @return            -  none
 *
 * @Note              -  none

 */
void GPIO_IRQHandling(uint8_t PinNumber){
 8000770:	b580      	push	{r7, lr}
 8000772:	b084      	sub	sp, #16
 8000774:	af00      	add	r7, sp, #0
 8000776:	0002      	movs	r2, r0
 8000778:	1dfb      	adds	r3, r7, #7
 800077a:	701a      	strb	r2, [r3, #0]
	uint8_t PinMasking = (1 << PinNumber);
 800077c:	1dfb      	adds	r3, r7, #7
 800077e:	781b      	ldrb	r3, [r3, #0]
 8000780:	2201      	movs	r2, #1
 8000782:	409a      	lsls	r2, r3
 8000784:	200f      	movs	r0, #15
 8000786:	183b      	adds	r3, r7, r0
 8000788:	701a      	strb	r2, [r3, #0]
	if (EXTI->FPR & PinMasking){
 800078a:	4b10      	ldr	r3, [pc, #64]	@ (80007cc <GPIO_IRQHandling+0x5c>)
 800078c:	691b      	ldr	r3, [r3, #16]
 800078e:	183a      	adds	r2, r7, r0
 8000790:	7812      	ldrb	r2, [r2, #0]
 8000792:	4013      	ands	r3, r2
 8000794:	d007      	beq.n	80007a6 <GPIO_IRQHandling+0x36>
		EXTI->FPR |= PinMasking;
 8000796:	4b0d      	ldr	r3, [pc, #52]	@ (80007cc <GPIO_IRQHandling+0x5c>)
 8000798:	6919      	ldr	r1, [r3, #16]
 800079a:	183b      	adds	r3, r7, r0
 800079c:	781a      	ldrb	r2, [r3, #0]
 800079e:	4b0b      	ldr	r3, [pc, #44]	@ (80007cc <GPIO_IRQHandling+0x5c>)
 80007a0:	430a      	orrs	r2, r1
 80007a2:	611a      	str	r2, [r3, #16]
	}
	else if(EXTI->RPR & PinMasking){
		EXTI->RPR |= PinMasking;
	}
}
 80007a4:	e00d      	b.n	80007c2 <GPIO_IRQHandling+0x52>
	else if(EXTI->RPR & PinMasking){
 80007a6:	4b09      	ldr	r3, [pc, #36]	@ (80007cc <GPIO_IRQHandling+0x5c>)
 80007a8:	68db      	ldr	r3, [r3, #12]
 80007aa:	200f      	movs	r0, #15
 80007ac:	183a      	adds	r2, r7, r0
 80007ae:	7812      	ldrb	r2, [r2, #0]
 80007b0:	4013      	ands	r3, r2
 80007b2:	d006      	beq.n	80007c2 <GPIO_IRQHandling+0x52>
		EXTI->RPR |= PinMasking;
 80007b4:	4b05      	ldr	r3, [pc, #20]	@ (80007cc <GPIO_IRQHandling+0x5c>)
 80007b6:	68d9      	ldr	r1, [r3, #12]
 80007b8:	183b      	adds	r3, r7, r0
 80007ba:	781a      	ldrb	r2, [r3, #0]
 80007bc:	4b03      	ldr	r3, [pc, #12]	@ (80007cc <GPIO_IRQHandling+0x5c>)
 80007be:	430a      	orrs	r2, r1
 80007c0:	60da      	str	r2, [r3, #12]
}
 80007c2:	46c0      	nop			@ (mov r8, r8)
 80007c4:	46bd      	mov	sp, r7
 80007c6:	b004      	add	sp, #16
 80007c8:	bd80      	pop	{r7, pc}
 80007ca:	46c0      	nop			@ (mov r8, r8)
 80007cc:	40021800 	.word	0x40021800

080007d0 <memset>:
 80007d0:	0003      	movs	r3, r0
 80007d2:	1882      	adds	r2, r0, r2
 80007d4:	4293      	cmp	r3, r2
 80007d6:	d100      	bne.n	80007da <memset+0xa>
 80007d8:	4770      	bx	lr
 80007da:	7019      	strb	r1, [r3, #0]
 80007dc:	3301      	adds	r3, #1
 80007de:	e7f9      	b.n	80007d4 <memset+0x4>

080007e0 <__libc_init_array>:
 80007e0:	b570      	push	{r4, r5, r6, lr}
 80007e2:	2600      	movs	r6, #0
 80007e4:	4c0c      	ldr	r4, [pc, #48]	@ (8000818 <__libc_init_array+0x38>)
 80007e6:	4d0d      	ldr	r5, [pc, #52]	@ (800081c <__libc_init_array+0x3c>)
 80007e8:	1b64      	subs	r4, r4, r5
 80007ea:	10a4      	asrs	r4, r4, #2
 80007ec:	42a6      	cmp	r6, r4
 80007ee:	d109      	bne.n	8000804 <__libc_init_array+0x24>
 80007f0:	2600      	movs	r6, #0
 80007f2:	f000 f819 	bl	8000828 <_init>
 80007f6:	4c0a      	ldr	r4, [pc, #40]	@ (8000820 <__libc_init_array+0x40>)
 80007f8:	4d0a      	ldr	r5, [pc, #40]	@ (8000824 <__libc_init_array+0x44>)
 80007fa:	1b64      	subs	r4, r4, r5
 80007fc:	10a4      	asrs	r4, r4, #2
 80007fe:	42a6      	cmp	r6, r4
 8000800:	d105      	bne.n	800080e <__libc_init_array+0x2e>
 8000802:	bd70      	pop	{r4, r5, r6, pc}
 8000804:	00b3      	lsls	r3, r6, #2
 8000806:	58eb      	ldr	r3, [r5, r3]
 8000808:	4798      	blx	r3
 800080a:	3601      	adds	r6, #1
 800080c:	e7ee      	b.n	80007ec <__libc_init_array+0xc>
 800080e:	00b3      	lsls	r3, r6, #2
 8000810:	58eb      	ldr	r3, [r5, r3]
 8000812:	4798      	blx	r3
 8000814:	3601      	adds	r6, #1
 8000816:	e7f2      	b.n	80007fe <__libc_init_array+0x1e>
 8000818:	08000840 	.word	0x08000840
 800081c:	08000840 	.word	0x08000840
 8000820:	08000844 	.word	0x08000844
 8000824:	08000840 	.word	0x08000840

08000828 <_init>:
 8000828:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800082a:	46c0      	nop			@ (mov r8, r8)
 800082c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800082e:	bc08      	pop	{r3}
 8000830:	469e      	mov	lr, r3
 8000832:	4770      	bx	lr

08000834 <_fini>:
 8000834:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000836:	46c0      	nop			@ (mov r8, r8)
 8000838:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800083a:	bc08      	pop	{r3}
 800083c:	469e      	mov	lr, r3
 800083e:	4770      	bx	lr
